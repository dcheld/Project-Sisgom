[comment encoding = UTF-8 /]
[module hybernateFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::eclipse::acceleo::sisgom::uml2java::common::fileUtils /]

[template public hybernatEntity(aClass : Class) post (trim())]
[if (aClass.hasStereotypeQuery('Entity'))]
@Entity
[/if]
[if (aClass.hasStereotypeQuery('Table'))]
@Table([aClass.attributeStereotype('Table')/])
[/if]
[if (aClass.hasStereotypeQuery('PrimaryKeyJoinColumn'))]
@PrimaryKeyJoinColumn([aClass.attributeStereotype('PrimaryKeyJoinColumn')/])
[/if]
[if (aClass.hasStereotypeQuery('Inheritance'))]
@Inheritance([aClass.attributeStereotype('Inheritance')/])
[/if]
[/template]

[template public hybernatProperty(prop : Property) post (trim())]
[if (prop.hasStereotypeQuery('Id'))]
@Id
[/if]
[if (hasStereotypeQuery('Column'))]
@Column([prop.attributeStereotype('Column')/])
[/if]
[if (prop.hasStereotypeQuery('GeneratedValue'))]
@GeneratedValue([prop.attributeStereotype('GeneratedValue')/])
[/if]
[if ( not prop.association.oclIsUndefined())]
[prop.association.hybernatAssociation()/]
[/if]
[/template]

[template public hybernatAssociation(asso : Association) post (trim())]
[if (asso.hasStereotypeQuery('OneToMany'))]
@OneToMany
[/if]
[if (asso.hasStereotypeQuery('ManyToOne'))]
@ManyToOne
[/if]
[if (asso.hasStereotypeQuery('JoinColumn'))]
@JoinColumn
[/if]
[/template]


[template public generateStereotype(e : Element) post (trim())]
[for (s : Stereotype | e.getAppliedStereotypes())]
	[e.attributeStereotype(s) /]
[/for]
[/template]

[template public attributeStereotype(e : Element, name : String) post (trim())]
[let s : Stereotype = e.getStereotypeQuery(name)]
	[e.attributeStereotype(s) /]
[/let]
[/template]

[template public attributeStereotype(e : Element, s : Stereotype) post (trim())]
[for (prop : Property | s.attribute)separator(', ')? (not prop.type.oclIsTypeOf(Class))]
[if (prop.name <> '')][prop.name.toLowerFirst()/]=[/if][attributeStereotypeGetValue(prop, e, s)/][/for]	
[/template]

[template public attributeStereotypeGetValue(prop:Property, e : Element, s : Stereotype) post (trim())]
[if (prop.type.name = 'String')]"[e.getValue(s, prop.name)/]"
[elseif (prop.type.name = 'Integer')] [e.getValue(s, prop.name)/]
[elseif (prop.type.name = 'Boolean')] [e.getValue(s, prop.name).toString().toLowerCase()/]
[else][prop.type.name/].[e.getValue(s, prop.name).eGet('name')/]
[/if]
[/template]


[query public getPropertyId(aClass : Class) : Property = 
	self.getAllAttributes()->select(p : Property | p.hasStereotypeQuery('Id'))->asOrderedSet()->first() /]


