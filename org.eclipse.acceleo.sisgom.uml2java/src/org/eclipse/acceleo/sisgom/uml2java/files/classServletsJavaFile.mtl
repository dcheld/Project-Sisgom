[comment encoding = ISO-8859-1 /]
[**
 * The documentation of the module classJavaFile.
 */]
[module classServletsJavaFile('http://www.eclipse.org/uml2/4.0.0/UML')]

[import org::eclipse::acceleo::sisgom::uml2java::common::fileUtils /]
[import org::eclipse::acceleo::sisgom::properties::properties /]

[**
 * The documentation of the template genClassJavaFile.
 * @param aClass
 */]

[template public genClassJavaServletDelete(aClass : Class){tipo:String = 'Deletar';}]
[file (aClass.genFilePathServlets(tipo), false, 'ISO-8859-1')]
package [aClass.genPackageValue() + '.' + aClass.getServletsNamespace()/];

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import [aClass.genPackageEntity() + '.' + aClass.name + aClass.getEntitySuffix()/];
import [aClass.genPackageDao() + '.' + aClass.name + aClass.getDaoSuffix()/];
import [aClass.genPackageValue() + '.' + aClass.getUtilsNamespace() + '.' + aClass.getDaoFactory()/];

@WebServlet(urlPatterns = "/[aClass.name.toLowerFirst()/]/[tipo/]")
public class [aClass.name + tipo + aClass.getServletsSuffix() /] extends HttpServlet {
	private [aClass.name + aClass.getDaoSuffix()/] [aClass.name.toLowerFirst() + aClass.getDaoSuffix()/] = DaoFactory.[aClass.name.toLowerFirst()/]Instance();
	
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		String id = req.getParameter("id");

		if (id == null) {
			resp.sendRedirect("/[aClass.name.toLowerFirst()/]/list.jsp?error=Id não encontrado.");
			return;
		}

		try {
			[aClass.name + aClass.getEntitySuffix()/] entity = this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].findById(Integer.parseInt(id));

			if (entity != null) {
				this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].delete(entity);
				resp.sendRedirect("/[aClass.name.toLowerFirst()/]/list.jsp");
			} else {
				resp.sendRedirect("/[aClass.name.toLowerFirst()/]/list.jsp?error=Cliente não encontrado.");
			}
		} catch (Exception ex) {
			resp.sendRedirect("/[aClass.name.toLowerFirst()/]/list.jsp?error=" + ex.getMessage());
		}
	}
}
[/file]
[/template]
[template public genClassJavaServletEdit(aClass : Class){tipo:String = 'Editar';}]
[file (aClass.genFilePathServlets(tipo), false, 'UTF-8')]
package [aClass.genPackageValue() + '.' + aClass.getServletsNamespace()/];

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;

import [aClass.genPackageDao() + '.' + aClass.name + aClass.getDaoSuffix()/];
import [aClass.genPackageValue() + '.' + aClass.getUtilsNamespace() + '.' + aClass.getDaoFactory()/];
// [protected ('imports do Servlet')]
import [aClass.genPackageEntity() + '.' + aClass.name + aClass.getEntitySuffix()/];
// [/protected]
@WebServlet(urlPatterns = "/[aClass.name.toLowerFirst()/]/[tipo/]")
public class [aClass.name + tipo + aClass.getServletsSuffix() /] extends HttpServlet {

	private static final long serialVersionUID = 1L;
	private static final Logger LOGGER = Logger.getLogger([aClass.name + tipo + aClass.getServletsSuffix() /].class);
	private [aClass.name + aClass.getDaoSuffix()/] [aClass.name.toLowerFirst() + aClass.getDaoSuffix()/] = DaoFactory.[aClass.name.toLowerFirst()/]Instance();

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String id = req.getParameter("id");

		if ((id == null) || id.trim().isEmpty()) {
			resp.sendRedirect("/[aClass.name.toLowerFirst()/]/addEdit.jsp");
			return;
		}

		try {
			[aClass.name + aClass.getEntitySuffix()/] entity = this.[aClass.name.toLowerFirst() + aClass.getDaoSuffix()/].findById(Integer.parseInt(id));

			if (entity != null) {
				HttpSession session = req.getSession();

				// [protected ('adicionar parametros na sessao')]
			
				// [/protected];

				resp.sendRedirect("/[aClass.name.toLowerFirst()/]/addEdit.jsp");
			} else {
				resp.sendRedirect(String.format("/[aClass.name.toLowerFirst()/]/list.jsp?error=[aClass.name/] ['[%s]'/] não foi encontrado.", id));
			}
		} catch (Exception ex) {
			LOGGER.error(ex.getMessage(), ex);
			resp.sendRedirect("/Clientes/list.jsp?error=" + ex.getMessage());
		}
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		try {
			[aClass.name + aClass.getEntitySuffix()/] entity = this.parseToCliente(req);

			if (entity.getId() != 0) {
				this.ClienteDao.update(entity);
			} else {
				this.ClienteDao.save(entity);
			}

			resp.sendRedirect("/Clientes/list.jsp");
		} catch (Exception ex) {
			LOGGER.error(ex.getMessage(), ex);
			resp.sendRedirect(String.format("/Clientes/list.jsp?error=%s", ex.getMessage()));
		}
	}

	private [aClass.name + aClass.getEntitySuffix()/] parseToCliente(HttpServletRequest req) {

		[aClass.name + aClass.getEntitySuffix()/] entity = new [aClass.name + aClass.getEntitySuffix()/]();
		// [protected ('obter parametros')]
			
		// [/protected]
		return entity;
	}
}
[/file]
[/template]